#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ KVA
"""
import os
import sys
import importlib.util

def check_file_exists(filepath):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞"""
    if os.path.exists(filepath):
        print(f"‚úÖ {filepath}")
        return True
    else:
        print(f"‚ùå {filepath} - –ù–ï –ù–ê–ô–î–ï–ù")
        return False

def check_python_syntax(filepath):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python —Ñ–∞–π–ª–∞"""
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            compile(f.read(), filepath, 'exec')
        print(f"‚úÖ {filepath} - —Å–∏–Ω—Ç–∞–∫—Å–∏—Å OK")
        return True
    except SyntaxError as e:
        print(f"‚ùå {filepath} - –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        return False
    except Exception as e:
        print(f"‚ö†Ô∏è  {filepath} - –û–®–ò–ë–ö–ê: {e}")
        return False

def check_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã"""
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ò–ú–ü–û–†–¢–û–í:")
    
    modules_to_check = [
        'database_module.db_init',
        'database_module.database',
        'scan_module.read_files',
        'scan_module.read_layout',
        'processing_module.calculate_data',
        'data_module.make_export_file',
        'data_module.make_export_plot',
        'output_data.console_strings'
    ]
    
    all_good = True
    for module in modules_to_check:
        try:
            __import__(module)
            print(f"‚úÖ {module}")
        except ImportError as e:
            print(f"‚ùå {module} - –û–®–ò–ë–ö–ê –ò–ú–ü–û–†–¢–ê: {e}")
            all_good = False
        except Exception as e:
            print(f"‚ö†Ô∏è  {module} - –û–®–ò–ë–ö–ê: {e}")
            all_good = False
    
    return all_good

def main():
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–†–û–ï–ö–¢–ê KVA")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\nüìÅ –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:")
    files_to_check = [
        'main.py',
        'database_module/db_init.py',
        'database_module/database.py',
        'scan_module/read_files.py',
        'scan_module/read_layout.py',
        'processing_module/calculate_data.py',
        'data_module/make_export_file.py',
        'data_module/make_export_plot.py',
        'output_data/console_strings.py',
        'requirements.txt',
        'FEATURES_README.md'
    ]
    
    files_ok = all(check_file_exists(f) for f in files_to_check)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ç–∞–∫—Å–∏—Å Python —Ñ–∞–π–ª–æ–≤
    print("\nüêç –ü–†–û–í–ï–†–ö–ê –°–ò–ù–¢–ê–ö–°–ò–°–ê:")
    python_files = [f for f in files_to_check if f.endswith('.py')]
    syntax_ok = all(check_python_syntax(f) for f in python_files)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    imports_ok = check_imports()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    print("\nüìÇ –ü–†–û–í–ï–†–ö–ê –î–ò–†–ï–ö–¢–û–†–ò–ô:")
    dirs_to_check = [
        'database_module',
        'scan_module', 
        'processing_module',
        'data_module',
        'output_data',
        'example_layouts',
        'reports'
    ]
    
    dirs_ok = all(check_file_exists(d) for d in dirs_to_check)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("\n" + "=" * 50)
    if files_ok and syntax_ok and imports_ok and dirs_ok:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        return 0
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:")
        if not files_ok:
            print("  - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ–∞–π–ª—ã")
        if not syntax_ok:
            print("  - –°–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –≤ Python —Ñ–∞–π–ª–∞—Ö")
        if not imports_ok:
            print("  - –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏")
        if not dirs_ok:
            print("  - –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏")
        return 1

if __name__ == "__main__":
    sys.exit(main())