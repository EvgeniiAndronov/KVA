API Reference
=============

Полная документация API всех модулей проекта.

.. autosummary::
   :toctree: _autosummary
   :recursive:

   main
   data_module
   database_module
   processing_module
   scan_module
   tests_module
Проект использует следующие библиотеки:
---------------------------------------
* **matplotlib** (>=3.10.6) - для создания графиков и диаграмм.
Достаточно мощная и гибкая библиотека для визуализации данных в Python, 
которая считается стандартом для создания статических, анимированных и интерактивных визуализаций.  
   Почему Matplotlib?
1. Он обладает всесторонней функциональностью
Matplotlib поддерживает невероятно широкий спектр типов визуализаций:
Линейные графики (line plots)
Точечные диаграммы (scatter plots)
Гистограммы и столбчатые диаграммы
Круговые диаграммы (pie charts)
Контурные графики и градиентные поля
Трехмерные визуализации (через toolkit mplot3d)
2. Matplotlib позволяет создавать графики высокого качества, 
а также поддерживает экспорт в различные форматы (PNG, PDF, SVG, EPS, JPEG) с контролем разрешения (DPI) и размера.
3. При необходимости функционал Matplotlib можно расширить большим количеством специально созданных для него пакетов и расширений
Из альтернативных вариантов мы рассмотрели:Plotly
-Она фокусируется на интерактивных и веб-ориентированных визуализациях, но Matplotlib,
оказался проще в освоении и удобнее при использовании не интерактивных графиков.
* **pytest** (>=8.4.2) - для тестирования
Pytest — это мощный и гибкий фреймворк для тестирования в Python, который считается стандартом для написания и выполнения тестов в современных Python-проектах.
   Почему Pytest?
1. Pytest позволяет писать тесты в виде простых функций, используя понятный и лаконичный синтаксис:
2. Pytest предоставляет расширенные возможности для организации тестов:
3. Pytest генерирует детализированные отчеты о тестировании, которые помогают быстро находить и исправлять ошибки. При падении теста вы получаете максимально полезную информацию для отладки.
   Альтернативные варианты, которые мы рассматривали
Unittest
Doctest
* **sphinx** (>=8.2.3) - для генерации документации
Библиотека Sphinx — это мощный и гибкий генератор документации, который считается стандартом для создания технической
документации в мире Python и не только.
   Почему Sphinx?
1.  Sphinx поддерживает невероятно широкий спектр возможностей для написания качественной документации
2. Sphinx позволяет создавать хорошо структурированную и красивую документацию.
Он также поддерживает использование различных тем для изменения внешнего вида и обладает значительными возможностями расширения через систему плагинов.
3. Sphinx является инструментом, используемым для генерации официальной документации Python.
   Альтернативные варианты, которые мы рассматривали:
MkDocs - Более современный и простой в освоении генератор документации, который известен своими красивыми темами.
Он отлично подходит для проектов, где важна простота и скорость написания документации в Markdown, но уступает Sphinx в некоторых продвинутых возможностях.

Pdoc - Простой генератор документации, исключительно для Python. Он требует минимальной настройки и хорошо подходит для небольших
проектов, где важна быстрота запуска, но не обладает такой комплексной функциональностью, как Sphinx.
* **sphinx-rtd-theme** (>=3.0.2) - тема для документации
Sphinx RTD Theme — это современный, мобильно-ориентированный визуальный стиль для документации,
создаваемой с помощью Sphinx. Изначально разработанная для платформы Read the Docs, тема стала отраслевым стандартом для создания красивых и функциональных документационных сайтов.
   Почему Sphinx RTD Theme?
1. Тема спроектирована так, чтобы быть мобильно-дружелюбной и обеспечивать безупречный опыт чтения на любом устройстве — от смартфона до пк. 
2. Тема предлагает обширные возможности для настройки.
3. Ключевые особенности темы направлены на удобство пользователей.
   Альтернативные варианты, которые мы рассматривали:

Alabaster - Это тема по умолчанию для Sphinx. Она очень чистая и простая, но ее дизайн считается более базовым и менее современным по сравнению с RTD Theme.

Furo - Современная тема, которая уделяет особое внимание скорости работы и доступности. Она предлагает уникальный макет с боковой панелью, но менее распространена, чем RTD Theme.

* **tqdm** (>=4.67.1) - для отображения прогресс-баров
   Почему TQDM?
1. Простота и удобство использования
2. Минимальная нагрузка на выполнение кода
3. tqdm корректно работает в различных средах и графических интерфейсах.
4. Гибкая настройка отображения и кастомизации

Альтернативные варианты, которые мы рассматривали:
Progressbar2
TQDM  предлагает более простой синтаксис и лучшее быстродействие по сравнению с progressbar2.

Alive-progres
В отличие от alive-progress с богатыми анимациями,TQDM предоставляет минималистичный и производительный подход,
что лучше подходит для наших задач.
